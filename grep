total 388K
-rw-r--r-- 1 wilmer users 378K Mar  7 21:05 compiler.pdf
-rw-r--r-- 1 wilmer users  127 Feb 19 18:39 links.mdwn
-rw-r--r-- 1 wilmer users 1.1K Feb 19 18:37 requisitos.mdwn
#include"estructuras.h"
#include<iostream>

//using namespace std;
void arbol::addHijo(arbol *hijo){
	(*hijo).setPapa(this);
	hijos.push_back(hijo);
}

void arbol::setPapa(arbol *padre){
	papa=padre;
}

arbol *arbol::getPapa(){
	return papa;
}

int arbol::estaContenido(string &s){
	return contenido.count(s);
}

void arbol::insertar(string s,string tipo){
	if(contenido.count(s)==0)
		contenido[s]=tipo;
}

string arbol::tipoVar(string &var){
	return contenido[var];
}


string buscarVariable(string var){
         arbol *aux = actual;
         while(aux!=NULL){
             if((*aux).estaContenido(var)) return (*aux).tipoVar(var);
             aux = (*aux).getPapa();
         }
         return "";
}


void enterScope(){
	arbol *nuevo = new arbol;
	(*actual).addHijo(nuevo);
	actual = nuevo;
}

void exitScope(){
	actual = (*actual).getPapa();
}


/* main de prueba del archivo
int main(){
	string s = "bla1";
	(*actual).insertar(s,"strin");
	enterScope();
	enterScope();
	cout << buscarVariable(s) << endl;
}

*/

#include<vector>
#include<string>
#include<map>
#include<new>
using namespace std;
#define estructuras

	union MadafakaTypes{
	     int intValue;
	     float floatValue;
	     char charValue;
	     string *stringValue;
	};

	//clase que representa el arbol de SymTable
	class arbol{
		private:
			arbol *papa;
			vector<arbol *> hijos;
			map<string,string> contenido;

		public:
			arbol(){papa=NULL;contenido.clear();}
			arbol(arbol *p,arbol *cont) : papa(p){contenido.clear();}
			void addHijo(arbol *);
			void setPapa(arbol *);
			arbol *getPapa();
			void insertar(string ,string );
			int estaContenido(string &);
			string tipoVar(string &);
	};

	arbol raiz;
	arbol *actual = &raiz;

	/* Funcion que retornara el tipo de la variable
	que se esta consultando,
	en caso de que no exista se retornara la cadena vacia*/

	string buscarVariable(string);

	void enterScope();

	void exitScope();
"estructuras.o" may be a binary file.  See it anyway? 